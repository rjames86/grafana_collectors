version: "3.8"

services:
  api:
    container_name: api
    build: ./api
    depends_on:
      - wxfdashboardsaio_influxdb
    ports:
      - "8080:5000"
    restart: always
    volumes:
      - ./api:/app
    entrypoint:
      - flask
      - run
      - --host=0.0.0.0
    environment:
      FLASK_DEBUG: 1
      FLASK_APP: ./main.py
      WEATHERFLOW_COLLECTOR_INFLUXDB_PASSWORD: "${WEATHERFLOW_COLLECTOR_INFLUXDB_PASSWORD}"
      WEATHERFLOW_COLLECTOR_INFLUXDB_URL: wxfdashboardsaio_influxdb
      WEATHERFLOW_COLLECTOR_INFLUXDB_USERNAME: "${WEATHERFLOW_COLLECTOR_INFLUXDB_USERNAME}"

  ecobee_collector:
    container_name: ecobee_collector
    build: ./ecobee_influx_connector
    depends_on:
      - wxfdashboardsaio_influxdb
      - wxfdashboardsaio_grafana
    environment:
      ECOBEE_API_KEY: "${ECOBEE_API_KEY}"
      ECOBEE_WORK_DIR: "."
      ECOBEE_THERMOSTAT_ID: "${ECOBEE_THERMOSTAT_ID}"
      ECOBEE_INFLUX_SERVER: "http://wxfdashboardsaio_influxdb:8086"
      ECOBEE_INFLUX_BUCKET: "ecobee"
      ECOBEE_INFLUX_USER: "${WEATHERFLOW_COLLECTOR_INFLUXDB_USERNAME}"
      ECOBEE_INFLUX_PASSWORD: "${WEATHERFLOW_COLLECTOR_INFLUXDB_PASSWORD}"
      ECOBEE_ALWAYS_WRITE_WEATHER_AS_CURRENT: "false"
      ECOBEE_WRITE_HEAT_PUMP_1: "true"
      ECOBEE_WRITE_HEAT_PUMP_2: "true"
      ECOBEE_WRITE_AUX_HEAT_1: "true"
      ECOBEE_WRITE_AUX_HEAT_2: "true"
      ECOBEE_WRITE_COOL_1: "true"
      ECOBEE_WRITE_COOL_2: "true"
      ECOBEE_WRITE_HUMIDIFIER: "true"
    volumes:
      - ./data/ecobee_collector:/var/lib/ecobee_collector
    restart: always

  solaredge_connector:
    container_name: solaredge_collector
    build: ./solaredge
    depends_on:
      - wxfdashboardsaio_influxdb
    environment:
      WEATHERFLOW_COLLECTOR_INFLUXDB_PASSWORD: "${WEATHERFLOW_COLLECTOR_INFLUXDB_PASSWORD}"
      WEATHERFLOW_COLLECTOR_INFLUXDB_URL: wxfdashboardsaio_influxdb
      WEATHERFLOW_COLLECTOR_INFLUXDB_USERNAME: "${WEATHERFLOW_COLLECTOR_INFLUXDB_USERNAME}"
      SOLAREDGE_SITE_ID: "${SOLAREDGE_SITE_ID}"
      SOLAREDGE_TOKEN: "${SOLAREDGE_TOKEN}"
    volumes:
      - ./data/solaredge_collector:/var/lib/solaredge_collector
    restart: always

  august_collector:
    container_name: august_collector
    build: ./august
    depends_on:
      - api
      - wxfdashboardsaio_grafana
    environment:
      AUGUST_USERNAME: "${AUGUST_USERNAME}"
      AUGUST_PASSWORD: "${AUGUST_PASSWORD}"
    volumes:
      - ./data/august_collector:/var/lib/august_collector
    restart: always

  purpleair_collector:
    container_name: purpleair_collector
    build: ./purpleair
    depends_on:
      - wxfdashboardsaio_influxdb
      - wxfdashboardsaio_grafana
    environment:
      INFLUXDB_PASSWORD: "${WEATHERFLOW_COLLECTOR_INFLUXDB_PASSWORD}"
      INFLUXDB_URL: wxfdashboardsaio_influxdb
      INFLUXDB_USERNAME: "${WEATHERFLOW_COLLECTOR_INFLUXDB_USERNAME}"
      SENSOR_ID: "187589"
      INFLUX_DB: "purpleair"
    volumes:
      - ./data/purpleair:/var/lib/purpleair
    restart: always

  wxfdashboardsaio_grafana:
    container_name: wxfdashboardsaio_grafana
    build: ./grafana
    environment:
      GF_AUTH_ANONYMOUS_ORG_ROLE: Editor
      GF_AUTH_ANONYMOUS_ENABLED: "false"
      TZ: America/Denver
    ports:
      - "3000:3000"
    restart: always
    volumes:
      - ./data/grafana:/var/lib/grafana

  wxfdashboardsaio_influxdb:
    container_name: wxfdashboardsaio_influxdb
    image: influxdb:1.8
    environment:
      TZ: America/Denver
      INFLUXDB_ADMIN_PASSWORD: "${INFLUXDB_ADMIN_PASSWORD}"
      INFLUXDB_ADMIN_USER: admin
      INFLUXDB_DATA_ENGINE: tsm1
      INFLUXDB_DB: weatherflow
      INFLUXDB_HTTP_FLUX_ENABLED: true
      INFLUXDB_USER: weatherflow
      INFLUXDB_USER_PASSWORD: "${WEATHERFLOW_COLLECTOR_INFLUXDB_PASSWORD}"
    ports:
      - "8086:8086"
    restart: always
    volumes:
      - ./data/influxdb:/var/lib/influxdb:rw

  influxdb2:
    image: influxdb:latest
    volumes:
      - ./data/influxdb2:/var/lib/influxdb2:rw
    env_file:
      - weatherflow_collector_v2.env
      - weatherflow_collector_v2.dev
    ports:
      - "8087:8086"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  weatherflow-collector-v2:
    container_name: weatherflow-collector-v2
    image: lux4rd0/weatherflow-collector:5.1.57
    env_file:
      - weatherflow_collector_v2.dev
      - weatherflow_collector_v2.env
    restart: always
    depends_on:
      influxdb2:
        condition: service_healthy
      wxfdashboardsaio_grafana:
        condition: service_started
    ports:
      - "50222:50222/udp"

  wxfdashboardsaio-collector:
    container_name: wxfdashboardsaio-collector
    image: lux4rd0/weatherflow-collector:3.5.3
    environment:
      TZ: America/Denver
      WEATHERFLOW_COLLECTOR_BACKEND_TYPE: "influxdb"
      WEATHERFLOW_COLLECTOR_INFLUXDB_PASSWORD: "${WEATHERFLOW_COLLECTOR_INFLUXDB_PASSWORD}"
      WEATHERFLOW_COLLECTOR_INFLUXDB_URL: http://wxfdashboardsaio_influxdb:8086/write?db=weatherflow
      WEATHERFLOW_COLLECTOR_INFLUXDB_USERNAME: "${WEATHERFLOW_COLLECTOR_INFLUXDB_USERNAME}"
      WEATHERFLOW_COLLECTOR_TOKEN: "${WEATHERFLOW_COLLECTOR_TOKEN}"
      WEATHERFLOW_COLLECTOR_STATION_ID: 83924
    restart: always
    depends_on:
      - wxfdashboardsaio_influxdb